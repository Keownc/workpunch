/* 
 * angular-autodisable 0.2.1
 * http://github.com/kirstein/angular-autodisable
 * 
 * Licensed under the MIT license
 */
!function(a){"use strict";return a.module("ngAutodisable",[]).directive("ngAutodisable",["$parse",function(b){function c(b){return b&&a.isFunction(b.then)&&a.isFunction(b["finally"])}function d(a,b,d,e){var f=e(b,{$event:d});c(f)&&a.handlePromise(f)}function e(a,b,c){var e;if(c.hasOwnProperty(k))e=h(b,j,g(c),f(c[k]));else{if(!c.hasOwnProperty(m))throw new Error("ngAutodisable requires ngClick or ngSubmit attribute in order to work");e=h(b.find("button[type=submit]"),l,g(c),f(c[m]))}b.unbind(e.eventName).bind(e.eventName,function(b){a.$apply(function(){e.callbacks.forEach(d.bind(null,e,a,b))})})}function f(a){return a.split(";").map(function(a){return b(a,null,!0)})}function g(a){return a.hasOwnProperty(n)?a[n]:!1}function h(a,b,c,d){function e(){j--,0===j&&g()}function f(){a.attr(i,!0),c&&a.addClass(c)}function g(){a.attr(i,!1),c&&a.removeClass(c)}var h={},j=0;return h.eventName=b,h.callbacks=d,h.handlePromise=function(a){0===j&&f(),j++,a["finally"](function(){e()})},h}var i="disabled",j="click",k="ngClick",l="submit",m="ngSubmit",n="ngAutodisableClass";return{restrict:"A",link:e}}])}(angular);